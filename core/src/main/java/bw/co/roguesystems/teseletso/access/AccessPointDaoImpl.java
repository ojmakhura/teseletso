// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.teseletso.access;

import bw.co.roguesystems.teseletso.access.type.AccessPointTypeRepository;
import org.springframework.stereotype.Repository;

/**
 * @see AccessPoint
 */
@Repository("accessPointDao")
public class AccessPointDaoImpl
    extends AccessPointDaoBase
{
    
    public AccessPointDaoImpl(
        AccessPointTypeRepository accessPointTypeRepository,
        AccessPointRepository accessPointRepository
    ) {

        super(
            accessPointTypeRepository,
            accessPointRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toAccessPointVO(
        AccessPoint source,
        AccessPointVO target)
    {
        // TODO verify behavior of toAccessPointVO
        super.toAccessPointVO(source, target);
        // WARNING! No conversion for target.accessPointType (can't convert source.getAccessPointType():bw.co.roguesystems.teseletso.access.type.AccessPointType to bw.co.roguesystems.teseletso.access.type.AccessPointTypeVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccessPointVO toAccessPointVO(final AccessPoint entity)
    {
        // TODO verify behavior of toAccessPointVO
        return super.toAccessPointVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private AccessPoint loadAccessPointFromAccessPointVO(AccessPointVO accessPointVO)
    {
        // TODO implement loadAccessPointFromAccessPointVO
        throw new UnsupportedOperationException("bw.co.roguesystems.teseletso.access.loadAccessPointFromAccessPointVO(AccessPointVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (accessPointVO.getId() == null)
        {
            return  AccessPoint.Factory.newInstance();
        }
        else
        {
            return this.load(accessPointVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public AccessPoint accessPointVOToEntity(AccessPointVO accessPointVO)
    {
        // TODO verify behavior of accessPointVOToEntity
        AccessPoint entity = this.loadAccessPointFromAccessPointVO(accessPointVO);
        this.accessPointVOToEntity(accessPointVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void accessPointVOToEntity(
        AccessPointVO source,
        AccessPoint target,
        boolean copyIfNull)
    {
        // TODO verify behavior of accessPointVOToEntity
        super.accessPointVOToEntity(source, target, copyIfNull);
    }
}